package com.reyco.algorithm.sort;

//9,6,11,3,5,12,8,7,10,15,14,4,1,13,2
//第一轮
//第1次
//6,9,11,3,5,12,8,7,10,15,14,4,1,13,2
//第2次
//6,9,11,3,5,12,8,7,10,15,14,4,1,13,2
//第3次
//6,9,3,11,5,12,8,7,10,15,14,4,1,13,2
//...
//第N-1次
//6,9,3,5,11,8,7,10,12,14,4,1,13,2,15

//6,9,3,5,11,8,7,10,12,14,4,1,13,2,15
//第二轮
//第1次
//6,9,3,5,11,8,7,10,12,14,4,1,13,2,15
//第2次
//6,3,9,5,11,8,7,10,12,14,4,1,13,2,15
//第3次
//6,3,5,9,11,8,7,10,12,14,4,1,13,2,15
//...
//第N-2次
//9,3,5,6,8,7,10,11,12,4,1,13,2,14,15

//9,3,5,6,8,7,10,11,12,4,1,13,2,14,15
//第3轮
//第1次
//3,9,5,6,8,7,10,11,12,4,1,13,2,14,15
//第2次
//3,5,9,6,8,7,10,11,12,4,1,13,2,14,15
//第3次
//3,5,6,9,8,7,10,11,12,4,1,13,2,14,15
//...
//第N-3次
//3,5,6,8,7,9,10,11,4,1,12,2,13,14,15

//第4轮
//3,5,6,7,8,9,10,4,1,11,2,12,13,14,15

//第5轮
//3,5,6,7,8,9,4,1,10,2,11,12,13,14,15

//第6轮
//3,5,6,7,8,4,1,9,2,10,11,12,13,14,15

//第7轮
//3,5,6,7,4,1,8,2,9,10,11,12,13,14,15

//第8轮
//3,5,6,4,1,7,2,8,9,10,11,12,13,14,15

//第9轮
//3,5,4,1,6,2,7,8,9,10,11,12,13,14,15

//第10轮
//3,4,1,5,2,6,7,8,9,10,11,12,13,14,15

//第11轮
//3,1,4,2,5,6,7,8,9,10,11,12,13,14,15

//第12轮
//1,3,2,4,5,6,7,8,9,10,11,12,13,14,15

//第13轮
//1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
/**
 * 冒泡排序-----------相邻的两个数i和i+1交换，交换后i往后移一位，一轮后最大（最小）的数跑到了最后;把前面的部分当作一个新的数组,继续之前的操作
 * 时间复杂度: O(N²)
 * 空间复杂度: O(1)  
 * 稳定性:     有
 * @author reyco
 *
 */
public class BubbleSort {

	public static void main(String[] args) {
		int[] arr = {9,6,11,3,5,12,8,7,10,15,14,4,1,13,2};
		sort(arr);
		print(arr);
	}
	public static void sort(int[] arr) {
		//i要保证后面至少有一个数i<arr.length-1
		for (int i=0;i<arr.length-1;i++) {
			boolean flag=true;
			//j和j+1交换,所以j后面必须保证有数
			for (int j=0;j<arr.length-1-i;j++) {
				if(arr[j]>arr[j+1]) {
					swap(arr, j, j+1);
					flag=false;
				}
			}
			if(flag) {
				break;
			}
		}
	}
	/**
	 * 打印数组
	 * @param arr
	 */
	private static void print(int[] arr){
		for (int i=0;i<arr.length;i++) {
			System.out.print(arr[i]+" ");
		}
		System.out.println();
	}
	/**
	 * 数组索引交换位置
	 * @param arr
	 * @param i
	 * @param j
	 */
	private static void swap(int[] arr,int i,int j) {
		int temp = arr[i];
		arr[i]=arr[j];
		arr[j]=temp;
	}
}
